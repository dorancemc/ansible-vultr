---

- name: "Provision Vultr server: {{ server.name }}"
  ngine_io.vultr.vultr_server:
    api_account: default
    api_key: "{{ vultr_api_key }}"
    auto_backup_enabled: "{{ server.auto_backup_enabled | default(vultr_auto_backup_enabled) }}"
    force: "{{ server.force | default(vultr_force) }}"
    hostname: "{{ server.hostname | default(server.name) }}"
    ipv6_enabled: "{{ server.ipv6_enabled | default(vultr_ipv6_enabled) }}"
    notify_activate: "{{ server.notify_activate | default(vultr_notify_activate) }}"
    os: "{{ server.os | default(vultr_osid) }}"
    plan: "{{ server.plan | default(vultr_planid) }}" 
    private_network_enabled: "{{ server.private_network_enabled | default(vultr_private_network_enabled) }}"
    region: "{{ server.region | default(vultr_region) }}"
    state: "{{ server.state | default('present') }}"
    snapshot: "{{ server.snapshot | default('') }}"
    ssh_keys: "{{ server.ssh_keys | default(vultr_sshkeysid) }}"
    tag: "{{ server.tag | default('') }}"
    name: "{{ server.name }}"
  register: created_server
  tags: "{{ server.name }}"

- name: ping to {{ created_server.vultr_server.v4_main_ip }}
  shell: ping -c 3 -q {{ created_server.vultr_server.v4_main_ip }}
  register: vhost_running
  until: vhost_running.rc == 0
  retries: 10
  delay: 20
  when: created_server.changed and (server.state is not defined or (server.state is defined and server.state != 'absent')) and (vultr_ping_host is defined and vultr_ping_host)

- name: vult server info
  debug:
    msg:
      - "Public IPv4 Address: {{ created_server.vultr_server.v4_main_ip }}"
      - "Default Password: {{ created_server.vultr_server.default_password }}"
      - "url kvm connection: {{ created_server.vultr_server.kvm_url }}"
  when: (server.state is not defined or (server.state is defined and server.state != 'absent')) and (vutlr_print_data is defined and vutlr_print_data)

- name: include role to update ns records
  include_role: 
    name: "{{ role_nsrecords.name }}"
    tasks_from: "{{ role_nsrecords.task | default ('main') }}"
  when: role_nsrecords is defined and role_nsrecords.run
